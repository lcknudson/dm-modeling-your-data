Creat a recipt creating/sharing app

Grocery list app

Planning out tables and how the data will relate to each other. 

Features
- users can sign into the app with their email and password
- users can create recipes with ingredients and instructions
- recipes can be marked as public or private
- users can view other people’s recipes
- ingredients from recipes can be added to user’s grocery lists
- users can create their own occasions and assign recipes to occasions

What do we need to track? 
email address
password
username
display name
ingredients
brand of ingredients
recipes
quantity in recipes
recipe instructions
public or private recipe 
From Recipe "add to" shopping list
Occasion - add recipes to occasions
Can mulitple users contribute to an occasion? 
Shopping location "store"
recipe ID to view
Occasions add recipies 

Table Ideas: 

"User" Table: 
user ID: PK
email address
password
username
dispaly (nickname)


"ingredients" Table:
ingredient PK
ingredient name



"Recipe" view:
recipe ID
recipe name
public or private (boolen)
instructions body text
amount of ingredient
add ingredients to shopping list
add recipe to occasion (id number)

"recipe_ingredients" table:
recipe_id: foreign key
ingredients (foreign key to another table)


"Shopping" list:
list_ID
list active/not active (boolean)
ingredient_ID (foreign key)
store_ID(foreign key)

"Store": 
store_ID (Primary Key)
store name
store address

"Occasion" Table: 
occasion_id
date
location

Step 3: Relationships

What field IDs have a Relationships

1-to-1:
user_id & recipe_ID: 1t1 because a user "owns" a recipe

1-to-Many Relationships:
- ingredient.id : 1tm because one ingredient could be in mulitple recipes and on multiple shopping lists
- recipe.id: 1tm because a recipe could be on multiple occasions

Many-to-Many
ingredient_ID: Is many to many because an ingredient could be on many recipes and many shopping lists (or phrased differently it could be multiple 1 to many's as was mentioned in the lecture)








